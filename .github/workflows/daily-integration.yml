name: Sync website-edits to main

on:
  schedule:
    # Run daily at 2:00 AM UTC, Monday to Saturday
    - cron: "0 2 * * 1-6"
  workflow_dispatch: # Allow manual trigger

jobs:
  sync-website-edits:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Fetch all branches
      - name: Fetch all branches
        run: git fetch origin

      # Step 4: Check for changes in website-edits
      - name: Check if website-edits is ahead of main
        id: check_changes
        run: |
          if [[ -n "$(git log origin/main..origin/website-edits --oneline)" ]]; then
            echo "has_changes=true" >> $GITHUB_ENV
          else
            echo "has_changes=false" >> $GITHUB_ENV
          fi

      # Step 5: Create PR if changes exist
      - name: Create and merge PR
        if: env.has_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git checkout website-edits
          git pull --rebase origin main
          git push --force-with-lease origin website-edits

          # Create a unique branch for the PR
          BRANCH_NAME="chore_automated_update_main_from_website-edits_$(date +%s)"
          
          #sync website-edits with main
          git checkout -b $BRANCH_NAME origin/website-edits
          git push origin $BRANCH_NAME
          echo "website-edits successfully rebased and synced with main."

          # Create the pull request
          PR_URL=$(gh pr create --title "Automated PR: Sync website-edits with main" \
                                --body "This pull request was created automatically to merge updates from website-edits into main." \
                                --base main \
                                --head $BRANCH_NAME \
                                --label "auto" | grep "https://github.com")

          # Check if PR creation was successful
          if [[ -z "$PR_URL" ]]; then
              echo "Failed to create the pull request. Cleaning up..."

              # Switch to a different branch before deleting
              git checkout website-edits
              git branch -D $BRANCH_NAME
              git push origin --delete $BRANCH_NAME

              echo "Cleanup completed. Aborting."
              exit 1
          fi

          echo "Pull request created: $PR_URL"

          # Automatically merge the PR once checks pass
          gh pr merge "$PR_URL" --auto --squash --delete-branch

          # Sync website-edits with main using rebase
          #echo "Syncing website-edits with main using rebase..."
          #git checkout website-edits
          #git pull --rebase origin main
          #git push --force-with-lease origin website-edits

          #echo "website-edits successfully rebased and synced with main."

      # Step 6: Log if no changes
      - name: No changes detected
        if: env.has_changes == 'false'
        run: echo "No changes detected in website-edits. No pull request needed."

