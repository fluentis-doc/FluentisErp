name: Review Modified/Deleted Translations

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**' # Folder to watch for changes
#   pull_request:
#     branches:
#       - main
#     paths:
#       - 'docs/**' # Folder to watch for changes

jobs:
  create-issues:
    runs-on: ubuntu-latest
    permissions:
        issues: write
        contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch at least 2 commits to compare HEAD with HEAD^

      - name: Get modified and deleted .md files from the last commit
        id: get-files
        run: |
            # Get list of modified .md files in the docs folder
            MODIFIED_FILES=$(git diff-tree --no-commit-id --name-status -r HEAD | grep -E '^M\s.*\.md$' | awk '{print $2}' | grep '^docs/')
            
            # Get list of deleted .md files in the docs folder
            DELETED_FILES=$(git diff-tree --no-commit-id --name-status -r HEAD | grep -E '^D\s.*\.md$' | awk '{print $2}' | grep '^docs/')
            
            # Check if there are any files and set environment variables
            if [ -z "$MODIFIED_FILES" ] && [ -z "$DELETED_FILES" ]; then
                echo "No modified or deleted .md files found in the docs/ folder."
                exit 0
            fi
            
            # Set environment variables for modified and deleted files
            if [ -n "$MODIFIED_FILES" ]; then
                MODIFIED_FILES=$(echo "$MODIFIED_FILES" | tr '\n' ' ')
                echo "Modified files detected: $MODIFIED_FILES"
                echo "modified_files=$MODIFIED_FILES" >> $GITHUB_ENV
            else
                echo "modified_files=''" >> $GITHUB_ENV
            fi

            if [ -n "$DELETED_FILES" ]; then
                DELETED_FILES=$(echo "$DELETED_FILES" | tr '\n' ' ')
                echo "Deleted files detected: $DELETED_FILES"
                echo "deleted_files=$DELETED_FILES" >> $GITHUB_ENV
            else
                echo "deleted_files=''" >> $GITHUB_ENV
            fi
            
      - name: Create issues for translation review
        if: ${{ env.modified_files != '' || env.deleted_files != '' }}
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            MODIFIED_FILES: ${{ env.modified_files }}
            DELETED_FILES: ${{ env.deleted_files }}
            LANGUAGES: "en-US ro-RO hr-HR" # List of languages
        run: |
            # Convert space-separated lists to newline-separated lists
            modified_files=$(echo "$MODIFIED_FILES" | tr ' ' '\n')
            deleted_files=$(echo "$DELETED_FILES" | tr ' ' '\n')

            # Process each language
            for LANG in $LANGUAGES; do
                # Initialize the body for modified files
                if [ -n "$modified_files" ]; then
                body="The following files have been modified and need to be reviewed for translation to **${LANG} language**:\n"
                for file in $modified_files; do
                    body+="- ${file}\n"
                done

                echo "DEBUG: Body content for modified files - $body"

                # Write the body to a temporary file
                temp_file=$(mktemp)
                echo -e "$body" > "$temp_file"

                # Create the GitHub issue using the temporary file for the body
                gh issue create \
                    --title "${LANG} - Review modified files in docs folder" \
                    --assignee "@translation-team-${LANG:0:2}" \
                    --label "translation" \
                    --body-file "$temp_file"

                # Clean up the temporary file
                rm "$temp_file"
                fi

                # Initialize the body for deleted files
                if [ -n "$deleted_files" ]; then
                body="The following files have been deleted and need to be reviewed for translation to **${LANG} language**:\n"
                for file in $deleted_files; do
                    body+="- ${file}\n"
                done

                echo "DEBUG: Body content for deleted files - $body"

                # Write the body to a temporary file
                temp_file=$(mktemp)
                echo -e "$body" > "$temp_file"

                # Create the GitHub issue using the temporary file for the body
                gh issue create \
                    --title "${LANG} - Review deleted files in docs folder" \
                    --assignee "@translation-team-${LANG:0:2}" \
                    --label "translation" \
                    --body-file "$temp_file"

                # Clean up the temporary file
                rm "$temp_file"
                fi
            done